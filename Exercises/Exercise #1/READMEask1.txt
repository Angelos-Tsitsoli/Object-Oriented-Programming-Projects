Εντολές για την μεταγλώτισση: g++ -o ask1 ask1.cpp ask1main.cpp και ./ask1 με αριθμούς πχ  30 5 3 6  στην γραμμή εντολών πχ ./ask1  30 5 3 6 ή ./ask1 20 6 4 6 
                 

Περιγραφή αρχείου ask1.h και ταυτόχρονα περιγραφή των συναρτήσεων του ask1.cpp αρχείου κάθε κλάσης άλλα και της ask1main :

class book:
Αρχικά τα βιβλία της βιβλιοθήκης εφόσον διαθέτουν όνομα συγγραφέα, όνομα βιβλίου και αριθμό ISBN δημιούργησα ένα νέο τύπο δεδομένων (μια κλάση), που θα διαθέτει αυτά τα τα χαρακτηριστικά.
Το όνομα του συγγραφέα όπως και το όνομα του βιβλίου αποτελούν συμβολοσειρές οπότε τις όρισα ως strings και τέλος το isbn εφόσον είναι αριθμός είναι τύπου int.
Τα παραπάνω χαρακτηριστικά ενός βιβλίου βρίσκονται στο public κομμάτι της κλάσης book, προκειμένου να έχουν πρόσβαση σαυτά και άλλες κλάσεις όπως και συναρτήσεις, στην συνέχεια θα γίνει περιγραή κλάσεων που διαχειρίζονται βιβλία και συναρτήσεων που εκτυπώνουν τα χαρακτηριστικά τους ,επομένως χρειάζεται να βρίσκονται στο public κομμάτι της κλάσσης ,προκειμένου να είναι εύκολα προσβάσημα.
Στην συνέχεια έχουμε την constructor του βιβλίου : book() η οποία βρίσκεται στο public κομμάτι της κλάσης.

book::book():
Ο constructor της book αρχικά αρχικοποιεί τα strings name και writers_full_name με τελείες ώστε να μην έχουν κάποια συμβολοσειρά όπως και τον αριθμό ISBN σε μηδέν.Στην συνέχεια φτίαχνω δυο πίνακες τύπου string οι οποίοι θα αποτελούνται απο διάφορα strings (τυχαίες λέξεις) οι οποίες θα δωθούν ως όνομα του βιβλίου και ως όνομα του συγγραφέα τυχαία στην συνέχεια.
Στην επόμενη εντολή ορίζονται τρείς μεταβλητές τύπου int οι number,number2,number3 οι οποίες στην συνέχεια θα αποθηκεύουν έναν τυχαίο αριθμό, ουσιαστικά ο ρόλος τους είναι να αποθηκεύσουν έναν τυχαίο αριθμό που  θα προκύψει απο την rand.
Αρχικοποιούμε και τις τρείς μεταβλητές με μηδέν.
Το number θα παίρνει έναν αριθμό απο το 1 εώς το 5 και θα αναθέτει την τιμή που θα προκύψει απο το rand στο ISBN.
To number2 θα παίρνει έναν αριθμό απο το 0 εώς το 4 τυχαίο μέσω της rand και στην συνέχεια στο string name που αντιστοιχεί στο όνομα του βιβλίου θα δίνεται ένα όνομα απο τον πίνακα names και συγκεκριμένα απο την θέση με αριθμό τον τυχαίο αριθμό που θα έχει η μεταβλητή number2.  
Το number3 ομόιως με το number2 θα δέχεται έναν αριθμό απο το 0εώς το 4 τυχαίο μέσω της rand και στην συνέχεια στο string writers_full_name που αντιστοιχεί στο όνομα του συγγραφέα θα δίνεται ένα τυχαίο όνομα απο τον πίνακα writers_full_names συγκεκριμένα απο την θέση με αριθμό τον τυχαίο αριθμό που θα πάρει η μεταβλητή number3.
Προφανώς το number2 και number3 θα δέχονται αριθμόυς απο το 0 εώς το 4 και όχι έως το 5 λόγω των πινάκων διότι οι τοποθετήσεις στις θέσεις των πινάκων ξεκινούν απο το 0 .
Επίσης η assign χρησιμοποιήθηκε δίοτι μαυτό τον τρόπο δίνει μια νέα συμβολοσειρά σε μια μεταβλητή string αντικαθιστώντας τον τρέχον περιεχόμενο της.


class shelf:
Για την δημιουργία ενός ραφιού έφτιαξα την κλάση shelf η οποία διαθέτει τα παρακάτω χαρακτηριστικά:
Στο private κομμάτι της η κλάση διαθέτει ένα πίνακα με δείκτες οι οποίοι δείχνουν σε δείκτες οι οποίοι δείχνουν σε βιβλία στον οποίο πίνακα θα τοποθετείται η διεύθυνση ενός βιβλίου οταν καλούμε τις κατάλληλες συναρτήσεις.O πίνακας είναι δυναμικός και όχι στατικός διότι κάθε αντικείμενο του πίνακα  πρέπει να αρχικοποιηθεί με ορισμένα ορίσματα και ο πίνακας να είναι πίνακας με δείκτες σε αυτά τα αντικείμενα και εφόσον το μέγεθος του πίνακα δεν είναι σταθερό πρέπει ο πίνακας με τους δείκτες να δεσμευτει δυναμικά.
Το Νmax αποτελεί το μέγεθος του πίνακα που βρίσκεται στο ράφι,βρίσκεται εκεί και όχι στο public κομμάτι για να μην υπάρχει πρόσβαση στην τιμή της παρα μόνο στην αρχή στην γραμμή εντολών όπου της δίνουμε μια τιμή.
Η book_counter_shelf αποτελεί μια μεταβλητή η οποία μετράει τα βιβλία που διαθέτει κάθε ράφι και ομοίως δεν χρειάζεται καμία πρόσβαση σαυτήν, η μόνη της δουλειά είναι η εκτύπωση ενός αριθμού που μας λέει το πλήθος των βιβλίων στο ράφι.
Στην συνέχεια ακολουθεί η constructor η οποία εκτυπωνει ενα μύνημα οταν δημιουργείται το ράφι και η destructor η οποία εκτυπώνει ενα μύνημα οταν καταστρέφεται το ράφι.
Συγκεκριμένα όταν το ράφι δημιουργείται η constructor(η οποία δέχεται σαν όρισμα εναν int n όπου αποτελεί τη χωριτικότητα του ραφιού απο βιβλία και μέσω της οποίας θα δωθεί τιμή για το Νmax) εκτυπώνει ένα μύνημα το οποίο ανακοινώνει την δημιουργία του ραφιού έπειτα δίνει την τιμή που δώσαμε απο την γραμμή εντολών στην Nmax μέσω της n.
Έπειτα γίνεται δυναμική δεύσμευση και καταλαμβάνεται χώρος για τον πίνακα array τύπου book* για τους δείκτες που θα φιλοξενήσει κάθε κελί και θα διαθέτει n δηλαδή Νmax θέσεις.  
Τέλος στην constructor για την αρχικοποίηση κάθε κελιού έφτιαξα ένα βρόγχο for που θα βάζει null σε κάθε κελί.
Aπο την άλλη η destructor εκτός απο το μύνημα διαγραφής της διαθέτει και μια delete η οποία θα αποδεσμεύει το χώρο που καταλαμβάνει ο πίνακας με τις διευθυνσεις των βιβλίων και η τοποθέτηση της delete έγινε στον destructor έτσι ώστε να γίνονται οι απαιτούμενες εργασίες στο πίνακα και στο τέλος όταν θα κληθεί αυτόματα ο destructor να γίνει και η αποδεύσμευσή του πίνακα μέσω του τρόπου αυτού δεν χρειάζεται ο προγραμματιστής να θυμάται σε ποιό σημείο να βάλει την delte διότι θα γίνει αυτόματα στο τέλος.
Επίσης στην κλάση υπάρχει μια συνάρτηση για την τοποθέτηση(η οποία παίρνει ως όρισμα την διεύθυνση ενός βιβλίου), εκτύπωση και αφαίρεση βιβλίων.

place_book_shelf:
Ακολουθεί η place_book_shelf η οποία δέχεται ως όρισμα τη διεύθυνση ενός αντικειμένου τύπου book.
Αρχικά στην συνάρτηση γίνεται έλεγχος αν o πίνακας δεικτών array έχει φτάσει στην τελευταία του θέση που θα μπορούσε να περιέχει κάτι ο πίνακας και συγκεκριμένα ελέγχει αν σαυτήν την θέση περιέχει κάτι ο πίνακας, στην περίπτωση που περίχει μέχρι και σε εκέινη την θέση μια διεύθυνση ο πίνακας υπάρχει δηλαδή περιεχόμενο και στην θέση αυτή τότε σημαίνει ότι ο πίνακας είναι γεμάτος καθώς για να φτάσει μέχρι εκείνη την θέση του πίνακα η συνάρτηση σημαίνει ότι έχουν γεμίσει οι προηγούμενες και ειδικά στην περίπτωση που γεμίσει και εκείνη η θέση τότε θα έχει γεμίσει όλος θα τυπώσει το αντίστοιχο πίνακα και θα γυρίσει εκεί που κλήθηκε η συνάρτηση.
Έπειτα υπάρχει ένας βρόγχος που ξεκινάει απο το μηδέν μέχρι την τελευταία θέση του πίνακα στον οποίο ελέγχει για κάθε θέση του πίνακα αν είναι άδεια και μόνο στην περίπτωση που η θέση που ελέγχει εκείνη την στιγμή είναι άδεια τότε θα βάλει τη διεύθυνση που πήρε ως όρισμα η συνάρτηση για το αντίστοιχο βιβλίο στην συνέχεια θα αυξήσει τον μετρητή για τα βιβλία που βρίσκονται στο ράφι.
Θα εκτυπώσει τα στοιχεία του βιβλιού και θα βγει απο τον βρόγχο μέσω της break. Σε περίπτωση που οταν γίνει έλεγχος για το αν η θέση είναι κενή και δεν είναι ,τότε η συνάρτηση θα πάει στην περίπτωση του else όπου θα αυξηθεί η θέση του πίνακα κατά μία και θα συνεχίσει την παραπάνω διαδικασία στην επόμενη θέση του πίνακα.
Τέλος θα επιστρέψει απο εκεί που κλήθηκε μέσω της return true γιαυτο και η συνάρτηση είανι τύπου bool.

take_book_shelf:
Στην συνάρτηση αρχικά δημιουργείται μια μεταβλητή number τύπου int η οποία θα παίρνει έναν αριθμό τυχαίο μέσω της rand απο 0 εώς το Nmax-1 δηλαδή την τελευταία θέση που θα έχει ο πίνακας ανάλογα με την Nmax που του δίνουμε απο την γραμμή εντολών και ουσιαστικά μέσω αυτής θα διαλέγεται μια τυχαία θέση απο τον πίνακα με αριθμό τον τυχαίο αριθμό που παίρνει η μεταβλητή number.
Ελέγχεται αν η τυχαία θέση απο την οποία θα πάρουμε τη διέυθυνση του δείκτη που δείχνει σε βιβλίο είναι κενή στην περίπτωση που δεν είναι κενή έχει δηλαδή ως περιεχόμενο μια διεύθυνση τότε θα κάνει τη διεύθυνση αυτή κενή και θα μειώσει τον μετρητή που μετράει τα βιβλία του ραφιού κατα ένα,θα εκτυπώσει πόσα βιβλία υπάρχουν και στην συνέχεια ποιά βιβλία υπάρχουν .
Στην περίπτωση όπου η θέση που προκειται να παρθεί είναι κενή τότε θα εκτυπωθεί το αντίστοιχο μύνημα και η συνάρτηση θα επιστρέψει false εκεί που κλήθηκε αλλιως θα επιστρέψει true.

print_shelf:
Η συνάρτηση αυτή εκτυπώνει τα στοιχεία των βιβλίων που έχει το ράφι.
Διαθέτει ένα βόγχο που θα ελέγχει όλες τις θέσεις του πίνακα απο το 0 εώς την τελευταία του θέση ανάλογα το Nmax που του δίνουμε.
Αν η συγκεκριμένη θέση που ελέγχεται είναι κενή τότε δεν μπορεί να εκτυπώσει κάτι άρα κάνει break ώστε να ελεγχθει η επόμενη θέση.
Από την άλλη αν η θέση δεν είναι κενή τότε εκτυπώνει το περιεχόμενο της.


class cupboard:
Για την ντουλάπα εφόσον διαθέτει ράφια η δημιουργία της κλάσης cupboard  που διαθέτει αντικείμενα μιας άλλης κλάσης (συγκεκριμένα της shelf) ήταν κατάλληλη.
Εφόσον διαθέτει δύο ράφια έφτιαξα δυο αντικείμενα τύπου shelf top_cupboard και  bot_cupboard τα οποία βρίσκονται στο private κομμάτι της κλάσης για να μην υπάρχει πρόσβαση απο κάθε κλάση και συνάρτηση αλλα μόνο απο συγκεκριμένες συναρτήσεις. 
Στην συνέχεια στο public κομμάτι της κλάσης υπάρχει ο constructr της κλάσης και ο destructor μέσω των οποίων εκτυπώνεται ενα μύνημα για την κατασκευή και καταστροφή των ραφιών του ντουλαπιού αντίστοιχα.
Συγκεκριμένα στον constructor υπάρχει μία initializer list. Εφόσον η κλάση cupboard  διαθέτει δύο αντικείμενα άλλων κλάσεων τα οποία μάλιστα δέχονται ορίσματα (στην περίπτωση αυτή η shelf της οποίας ο constructor δέχεται όρισμα n ) h initializer list δίνει την δυνατότητα της αρχικοποίησης, γιαυτο και χρησιμοποιείται στην περίπτωση αυτή για να αρχικοποιηθούν τα δυο αντικείμενα της κλάσης με n δηλαδή Νmax.
Τέλος υπάρχει μια συνάρτηση για την τοποθέτηση ενός βιβλίου που παίρνει ως ορίσματα τη διεύθυνση ενός βιβλίου και έναν αριθμό που δείχνει σε ποιό ράφι  μεταξύ των δύο θα μπεί το βιβλίο, μια συνάρτηση για την αφαίρεση ενός βιβλίου με όρισμα εναν αριθμό που δείχνει απο ποιο ράφι θα γίνει η αφαίρεση και μια συνάρτηση για την εκτύπωση ενός βιβλίου.

place_book_cupboard:
Η συνάρτηση αυτή παίρνει ως ορίσματα τη διεύθυνση ενός βιβλίου και έναν αριθμό ο οποίος δείχνει σε ποιό από τα δύο ράφια θα μπεί το βιβλίο.
Αν η μεταβλητή l που δείχνει σε ποιο ράφι απο τα δύο θα μπει το βιβλίο είναι ίση με 4 τότε θα εκτυπώσει το αντίστοιχο μύνημα και θα καλέσει την  αντίστοιχη συνάρτηση που τοποθετεί το βιβλίο στο ράφι αλλιώς αν είναι ίση με 5 θα εκτυπώσει το αντίστοιχο μύνημα και θα καλέσει την  αντίστοιχη συνάρτηση που τοποθετεί το βιβλίο στο ράφι.
Όταν καλείται η place_book_shelf η μεταβλητή c η οποία είναι τύπου bool θα δεχτεί ως τιμές true ή false ανάλογα με το τι θα επιστρέψει η place_book_shelf (δηλαδή θα επιστρέψει true στην περίπτωση που τοποθετηθεί βιβλίο σε ράφι) τότε θα επιστρέψει true ή  false η συνάρτηση place_book_cupboard η διαδικασία γίνεται για κάθε ράφι.   

take_book_cupboard:
Η συάρτηση αυτή δέχεται ώς όρισμα έναν αριθμό ώστε να ξέρει απο ποιό ράφι απο τα δύο του ντουλαπιού να πάρει ένα βιβλίο.
Αν η μεταβλητή l που δείχνει σε ποιο ράφι απο τα δύο θα πάρει το βιβλίο είναι ίση με 4 τότε  θα εκτυπώσει το αντίστοιχο μύνημα και θα καλέσει την  αντίστοιχη συνάρτηση που παίρνει το βιβλίο απο το  ράφι αλλιώς αν είναι ίση με 5 θα εκτυπώσει το αντίστοιχο μύνημα και θα καλέσει την  αντίστοιχη συνάρτηση που παίρνει το βιβλίο απο το  ράφι
Όταν καλείται η take_book_shelf επιστρέφεται και δίνεται η τιμή true ή η τιμή false στην μεταβλητή o όπου ομοίως και η take_book_cupboard θα επιστρέψει true ή false.

print_cupboard:
Η συνάρτηση αυτή θα εκτυπώνει τα περιεχόμενα των ραφιών του ντουλαπιού.
Ουσιαστικά θα καλέσει την συνάρτηση που εκτυπώνει τα περιεχόμενα ενός ραφιού για το πάνω ράφι και ομοίως για το κάτω ράφι.

class base:
Σύμφωνα με την εκφώνηση η βιβλιοθήκη διαθέτει μια βάση. Επομένως ακολουθώντας την εκφώνηση έφτιαξα την κλάση base η οποία κατα την δημιουργία της (στην constructor της) και ένα μύνηνα κατά της καταστροφή του (στην destructor της).


class library:
Για την βιβλιοθήκη αντιστοιχεί η κλάση library.Στο private κομμάτι διαθέτει 3 αντικείμενα απο την κλάση του ραφιού που αντιστοιχούν στρα τρία ράφια της βιβλιοθήκης, ενα αντικείμενο της κλάσης του ντουλαπιού για το ντουλάπι που διαθέτει όπως και ένα αντικείμενο της κλάσης της βάσης για την βάση που διαθέτει η βιβλιοθήκη τα αντικείμενα αυτα βρίσκονται στο private κομματι ώστε να εχουν πρόσβαση σαυτά μόνο οι συναρτήσεις της βιβλιοθήκης.
Στο public κομμάτι υπάρχει ένας μετρητής book_counter o οποίος μετράει τα βιβλία που υπάρχουν στην βιβλιοθήκη ακόμα o destructor εκτυπώνει ένα μύνημα για την καταστροφή της βιβλιοθήκης, ο constructor εκτυπώνει ένα μύνημα για την κατασκευή του και χρησιμοποιείται μια initializer list για την αρχικοποίηση των αντικειμένων των άλλων κλάσεων που βρίσκονται στην κλάση αυτή.
Τέλος υπάρχει μια συνάρτηση για την τοποθέτηση ενός βιβλίου που παίρνει ως ορίσματα τη διεύθυνση ενός βιβλίου και έναν αριθμό που δείχνει σε ποιό ράφι  μεταξύ των 5 ραφίων θα μπεί (μαζι με της ντουλάπας) θα μπεί το βιβλίο, μια συνάρτηση για την αφαίρεση ενός βιβλίου με όρισμα εναν αριθμό που δείχνει απο ποιο ράφι  θα γίνει η αφαίρεση και μια συνάρτηση για την εκτύπωση ενός βιβλίου.


place_book_library:
Η συνάρτηση αυτή δέχεται τη διεύθυνση ενός βιβλίου και έναν αριθμό για το που θα τοποθετηθεί το βιβλίο.
Αν ο αριθμός απο τη μεταβλητή int του ορίσματος είναι 1 ή 2 ή 3 τότε θα εκτυπώσει το αντίστοιχο μυνήμα και θα καλέσει τη συνάρτηση που τοποθετεί το βιβλίο στο ράφι σε ένα απο τα 3 ράφια της βιβλιοθήκης αλλίως αν είναι 4 ή 5 θα εκτυπώσει το αντίστοιχο μυνήμα και θα καλέσει τη συνάρτηση που τοποθετεί το βιβλίο στο ράφι σε ένα απο τα 2 ράφια του ντουλαπιού.
Όταν καλείται η place_book_shelf ή η place_book_cupboard τότε ομοίως δίνεται η τιμή true η false στην μεταβλητή p, μάλιστα αν η μεταβλητή p είναι true δηαλδή ότι τοποθετήθηκε το βιβλίο σε ράφι μόνο τότε θα θα αυξηθεί ο μετρητής βιβλίων της βιβλιοθήκης .

take_book_library:
Η συνάρτηση αυτή δέχεται έναν αριθμό για το που θα τοποθετηθεί το βιβλίο.
Αν ο αριθμός απο τη μεταβλητή int του ορίσματος είναι 1 ή 2 ή 3 τότε θα εκτυπώσει το αντίστοιχο μυνήμα και θα καλέσει τη συνάρτηση που παίρνει ένα βιβλίο από το ράφι σε ένα απο τα 3 ράφια της βιβλιοθήκης αλλίως αν είναι 4 ή 5 θα εκτυπώσει το αντίστοιχο μυνήμα και θα καλέσει τη συνάρτηση που παίρνει ένα βιβλίο απο ένα ράφι σε ένα απο τα 2 ράφια του ντουλαπιού.
Όταν καλείται η take_book_shelf ή η take_book_cupboard τότε ομοίως δίνεται η τιμή true η false στην μεταβλητή n, μάλιστα αν η μεταβλητή n είναι true δηαλδή ότι αφαιρέθηκε το βιβλίο από ράφι μόνο τότε θα θα μειωθεί ο μετρητής βιβλίων της βιβλιοθήκης και θα εκτυπωθεί το αντίστοιχο μύνημα γισ το πόσα βιβλία υπάρχουν σε όλη την βιβλιοθήκη.

print_library:
Η συνάρτηση αυτή εκτυπώνει τα παρειχόμενα όλων των ραφιών της βιβλιοθήκης γιαυτό και καλεί την συνάρτηση που εκτυπώνει τα βιβλία ενός ραφιού για τα τρία ράφια της βιβλιοθήκης και την συνάρτηση που στο εσωτερικό της θα καλέσει την συνάρτηση που θα εκτυπώσει τα βιβλία που υπάρχουν στα ράφια του ντουλαπιού.


Πολλές cunstroctor φτιάχνονται στο .h αρχείο κατευθείαν μέσα στην κλάση διότι είναι μικρες και μαυτό τον τρόπο γίνονται inline.



Περιγραφή mainask1:

mainask1:
Στην main ορίζονται οι μεταβλητές Nmax για το μέγεθος των ραφιών ,K1 για τις τοποθετήσεις , Κ2 για τις αφαιρέσεις και L για το πλήθος των βιβλίων .
Μέσω της atoi ορίσματα απο την γραμμή εντολων θα γίνουν αριθμοί .
Δημιουργείται μια βιβλιοθήκη.
Στην συνέχεια δημιουργείται ένας πίνακας τύπου book στον οποίο δεσμεύουμαι χώρο για  L βιβλία και καλείται έτσι ο constructor της book δημιουργώντας L βιβλία και αποθηκεύοντας τα στο array.
Έπειτα υπάρχει ένας βρόγχος ο οποίος στον οποίο γίνονται Κ1 τοποθετήσεις. Ορίζεται μια μεταβλητή u και αρχικοποιείται με μηδέν η οποία  θα πάρει έναν τυχαίο αριθμο απο το 1 εώς το 5 και μέσω της srand θα παίρνει σε κάθε επανάληψη  διαφορετική τιμή και θα καλείται η συνάρτηση τοποθέτησης βιβλίου της βιβλιοθήκης με ορίσματα την διεύθυνση του περιεχομένου της θέσης του πίνακα  με αριθμό τον  αριθμό του i ανάλογα σε ποια επανάληψη βρίσκεται και με όρισμα έναν τυχαίο αριθμό  που παίρνει η μεταβλητή u.
Έπειτα υπάρχει ένας βρόγχος ο οποίος στον οποίο γίνονται Κ2 αφαιρέσεις. Ορίζεται μια μεταβλητή g και αρχικοποιείται με μηδέν η οποία  θα πάρει έναν τυχαίο αριθμο απο το 1 εώς το 5 και μέσω της srand θα παίρνει σε κάθε επανάληψη  διαφορετική τιμή και θα καλείται η συνάρτηση τοποθέτησης βιβλίου της βιβλιοθήκης με ορίσματα την διεύθυνση του περιεχομένου της θέσης του πίνακα  με αριθμό τον  αριθμό του i ανάλογα σε ποια επανάληψη βρίσκεται και με όρισμα έναν τυχαίο αριθμό  που παίρνει η μεταβλητή u.
Αποδεσμεύεται και ο χώρος που δεσμεύθηκε για τον πίνακα των βιβλίων όταν τελειώσουν οι απαραίτητες ενέργειες.
Επίσης ο ρόλος της srand(time(NULL)) είναι για να δίνονται τυχαίοι αριθμοί εκεί που καλούνται οι rand κάθε φορά που τρέχεται το πρόγραμμα.

Επίσης στα αρχεία main και ask1.cpp συμπεριλαμβάνεται η επικεφαλίδα του αρχείου .h  ask1.h.