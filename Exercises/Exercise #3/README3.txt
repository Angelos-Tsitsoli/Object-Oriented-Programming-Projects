Οι εντολές που χρησιμοποιήθηκαν για την μεταγλώτισση και το τρέξιμο είναι g++ -o proj3 proj3main.cpp proj3.cpp στην συνέχεια ./proj3 με αριθμούς για παράδειγμα ./proj3 5 4 4 1 2 2 

Παρακάτω γίνετε ανάλυση του .h αρχείου για κάθε εντολή με τη σειρά και μάλιστα για κάθε συνάρτηση γίνετε αναφορά και ανάλυση των περιεχομένων και της υλοποίησης του στο .cpp αρχείο.Ουσιαστικά η ανάγνωση του README γίνετε παρατηρώντας ταυτόχρονα το .h αρχείο , και μολίς κατά την ανάγνωση βρεθεί το όνομα της συνάρτησης συνοδευόμενο με της κλάσης πχ(creature is_a_zombie)για κάποια συνάρτηση αυτό σημαίνει ότι θα γίνει ανάλυση της υλοποίησης της στο .cpp αρχείο και μόλις τελειώσει η ανάλυση της συνάρτησης τότε το readme επιστρέφει στο .h αρχείο μέχρι να βρεθεί η επόμενη συνάρτηση. 
ask3.h
Αρχικά πριν την κλάση της creature γίνετε αναφορά σε επόμενη κλάση η οποία στην συνεχεια θα υλοποιηθεί , συγκεκριμένα τη κλάση creature_society .
Η δηλώση αυτή ουσιαστικά γίνεται προκειμένου να επιτευχθεί σωστα το class forwarding.
Συγκεκριμένα η κλάση creature θα χρησιμοποιήσει κατα την υλοποίηση της αντικείμενα της κλάσης creature_society ,ωστόσο η creature society δημιουργείται αργότερα ,άρα θα πρέπει να γίνει δήλωση πριν την κλαση creature οτι στην συνέχεια το πρόγραμμα θα συναντήσει μια κλάση creature_society εφόσον πριν υλοποιθεί χρησιμοποιούμε ενα αντικείμενο της.
Δεν χρειάζεται να γίνει δήλωση των άλλων δύο κλάσεων good και bad_creature, διότι αξιοποιείται η δυνατότητα της κληρονομικότητας. Στην creature συγκεκριμένα θα έχουμε στο protected κομμάτι εναν ακεραιο place_of_creature , όπου  θα χρησιμοποιηθεί αργότερα στην συνάρτηση της creature την link_with_society , συγκεκριμένα μέσω του pointer1 θα βρεθεί η διεύθυνση του συγκεκριμένου creature στον πίνακα των creatures της κλάσης society  και μόλις βρεθεί θα δωθεί η θέση του στον πίνακα, στον ακέραιο place_of_creature.
Επίσης στο protected κομμάτι  βρίσκεται και  ο ακέραιος που κρατάει την ζωή τoυ πλάσματος creatures_life , οι τιμές που βρίσκονται στο protected τμήμα ουσιαστικά βρίσκονται εκεί προκειμένου να είναι ορατές μονο απο την συγκεκριμένη κλάση και της υποκλάσεις της και όχι απο οποιαδήποτε κλάση και συνάρτηση.
Επίσης στο public κομμάτι βρίσκονται οι συναρτήσεις της creature οι οποίες θα αναλυθούν στην συνέχεια.

creature(int)
Αρχικα μέσω του constructor  της κλάσης creature αρχικοποιείται η μεταβλητή creature_life με L (όπου L η ζωή του πλάσματος)η οποία είναι η ζωη του creature και εκτυπώνεται το ανάλογο μύνημα.

creature is_a_zombie
H συνάρτηση αυτή ουσιαστικά θα ελέγχει αν η ζωή του πλάσματος είναι μηδέν στην περίπτωση που είναι τότε το πλάσμα θεωρείται zombie και επιστρέφει true , ενώ όταν δεν είναι θα επιστρέφει false.

creature is_a_good
Η συνάρτηση αυτή στην κλάση creature δεν υλοποιείται απλώς δηλώνεται, η υλοποίηση της γίνετια στις υποκλάσεις της.
Η συνάρτηση αυτή θα είναι pure virtual καθώς διαθέτει την φράση virtual στην αρχή και (=0) στο τέλος, λόγω αυτού  η κλάση creature θεωρείται abstract , η συνάρτηση ορίζεται έτσι ,ώστε να μην δημιουργούνται αντικείμενα αυτής της κλάσης(κάτι που χρειαζόμαστε διότι στην συνέχεια θα χειριστούμε αντικείμενα υποκλάσεων), γίνετε ωστόσο δήλωση δεικτών αυτής της κλάσης (το οποίο θα χρειαστεί στην συνέχεια) ενώ ακόμα αν δεν υλοποιηθεί η συνάρτηση is_a_good στις υποκλάσεις θα θεωρούνται και αυτές abstract.
H συνάρτηση υλοποιείται (αφού έχει δηλωθεί με τον ίδιο τρόπο και ορίσματα όπως στην creature) στις υποκλάσεις ενώ στην μητρική κλάση απλώς δηλώνεται, προκειμένου όταν θα καλείται η συνάρτηση   να επιλέγεται η "σωστή" συνάρτηση ,δηλαδή είτε της good_creature είτε της bad_creature ανάλογα με το που θα δείχνει ο δείκτης τύπου creature, σε good_creature ή bad_creature αντικείνενο , όπως θα γίνει η εξήγηση και στην συνέχεια.
Η συνάρτηση ακόμη είναι pure virtual διότι δεν διαθέτει στην κλάση creature κάποια διαδικασία αντιθέτως είναι εικονική.

creature gets_beaten
Η συνάρτηση αυτή δηλώνεται και υλοποιείται στην κλάση creature, και δέχεται ως όρισματα ενα pointer τυπου creature_society(για την διεύθυνση ουσιαστικά συγκεκριμένου αντικειμένου της κλάσης creature society) και έναν ακέραιο(για την θέση του πλάσματος στον πίνακα).
Συγκεκριμένα στην συνάρτηση αυτή γίνεται έλεγχος αν είναι zombie το πλάσμα δηλαδή αν η ζωή του είναι ίση με μηδέν , σε περίπτωση που δεν είναι τότε αφαιρείται η ζωή του κατά ένα, και εκτυπώνεται το ανάλογο μήνυμα.
Στην συνέχεια γίνεται έλεγχος για το άν το συγκεκριμένο πλάσμα που θα χτυπηθεί και βρίσκεται στην συγκεκριμένη θέση του πίνακα (n) τών πλασμάτων στην κλάση creature_society είναι good_creature και ταυτόχρονα η ζωή του αν είναι ίση με μηδέν , αυτό γίνεται ουσιαστικά για να εξεταστεί τι ήταν το πλάσμα  πρίν γίνει zombie για να ανανεώσει τους μετρητές του αντικειμένου της κλάσης creature society , προφανώς αυτή η περίπτωση γίνετε μόνο σε περίπτωση που είναι zombie το πλάσμα.
Σην περίπτωση που το πλέον zombie πρίν ήταν καλό πλάσμα τότε μείωνεται κατά ένα ο μετρητής των καλών πλασμάτων και αυξάνεται ο μετρητής των zombie κατά ένα .

creature gets_blessed
Η συνάρτηση αυτη (η οποία δέχεται σαν ορίσματα έναν δείκτη τύπου creature society για να αποθηκεύσει την διεύθυνση του αντικειμένου της κλάσης που ορίζεται και έναν ακέραιο n για την θέση του πλάσματος στον πίνακα πλασμλάτων της κοινωνίας)είναι pure virtual καθώς δεν διαθέτει κάποια διαδικασία στην συγκεκριμένη κλάση αλλά και για να  υλοποιείται στις υποκλάσεις , γιαυτό δηλώνεται απλά στην creature.Συγκεκριμένα η συνάρτηση είναι pure virtual προκειμένου να υλοποιηθεί  σε κάθε υποκλάση ανάλογα την περίπτωση. Αυτο γίνεται διότι η συγκεκριμένη συνάρτηση διαφέρει σε κάθε υποκλάση διότι καλεί διαφορετική συνάρτηση της creature_society κλάσης σε κάθε περίπτωση επίσης θα πρέπει να καλείται κάθε φορά η "σωστή" συνάρτηση ανάλογα με το που δείχνει ο δείκτης τύπου creature σε αντικείμενο good_creature ή bad_creature. 

creature link_with_society
Η συνάρτηση αυτή ουσιαστικά δέχεται μόνο έναν δείκτη τύπου creature society, καθώς ο σκοπός της είναι το συγκεκριμένο creature που θα καλέσει την συνάρτηση να βρεί την θέση του στον πίνακα των πλασμάτων της κλάσης creature_society.
Ειδικότερα, στην συνάρτηση αυτό που γίνετε είναι ότι  μέσω του δείκτη this (ο οποίος έχει ως περιεχόμενο την διεύθυνση του συγκεκριμένου creature)  ελέγχεται το εξή: όσο δεν συμπίπτει το περιεχόμενο του this με το περιεχόμενο της συγκεκριμένης θέσης του πίνακα ανάλογα με τον αριθμό του i τότε αυξάνεται το i κατά ένα και ελέγχεται η επόμενη θέση. Η συνάρτηση αυτή προφαώς καλείται για πλάσματα που ανήκουν στον πίνακα μόνο και γνωρίζουμε ότι ανήκουν.Όταν τελικά  συμπίπτει το περιεχόμενο του this με το περιεχόμενο της συγκεκριμένης θέσης του πίνακα σταματάει ο βρόγχος διότι αυτό σημαίνει ότι το πλάσμα βρήκε την θέση του στον πίνακα, γιαυτο και ο ακέραιος this_place δέχεται την τιμή του i , καθώς ο αριθμός αυτός θα αποτελεί την θέση του .
Στην συνέχεια την τιμή του this_place δίνεται στην μεταβλητή place_of_creature.
Τέλος εκτυπώνεται το ανάλογο μήνυμα.

creature clone
Η συνάρτηση αυτή είναι pure virtual και δηλώνεται απλώς στην κλάση creature , καθώς πρέπει να διαφέρει στις υποκλάσεις εφόσον  η διαδικάσία της κλωνοποίησης διαφέρει ανάλογα το πλάσμα (good_creature ή bad_creature), άρα μέσω της λειτουργίας των  virtuals θα κληθεί αυτόματα λόγω κληρονομικότητας η απαραίτητη συνάρτηση επίσης είναι pure διότι δεν διαθέτει κάποια διαδικασία είναι τελείως εικονική.

Σχόλιο:Σε περίπτωση που κάποια απο τις συναρτήσεις της creature δεν ήταν virtual και παρόλαυτα το πρόγραμμα παρέμενε ίδιο τότε εκτός απο μερικά λάθη τεχνικά που θα εμφανιζόντουσαν το κυριότερο θα ήταν ότι θα καλούνταν μόνο οι συναρτήσεις της κλάσης creature, ενώ των υποκλάσεων δεν θα καλούνταν ποτέ.

~creature
Ο destructor της creature πρέπει να είναι virtual προκειμένου να κληθούν και οι destructor των υποκλάσεων , σε περίπτωση που δεν ήταν virtual θα καλούνταν ο destructor μόνο της creature.

class good_creature
H κλάση αυτή εφόσον αποτελεί υποκλάση στο .h αρχείο θα γραφτεί με τον εξής τρόπο class good_creature : public creature όπως επίσης και η άλλη υποκλάση.
Στο private κομμάτι της η κλάση good_creature διαθέτει έναν ακέραιο good_thrsh στον οποίο θα δωθεί τιμή μέσω του constructor της good_creature για το κατώφλι των καλών πλασμάτων, ακόμα διαθέτει έναν ακέραιο g_thrsh στον οποίο θα δωθεί η ίδια τιμή με αυτήν που θα πάρει ο ακέραιος good_thrsh , επίσης διαθέτει έναν ακέραιο __L ο οποίος θα αποτελεί την τιμή της ζωής που θα πάρει η κλάση creature,  ο copy constructor της good_creature εφόσον είναι constructor υποκλάσης αναγκαστικά θα πρέπει να αρχικοποιείσει και τον constructor της  base class διότι της base class δεν είναι default , γιαυτό τον λόγο ορίζονται οι τιμές των g_thrsh και __L.
Τέλος η good_creature διαθέτει μια μεταβλητή τύπου string για το όνομα του πλάσματος το οποίο θα πάρει μέσω ενός πίνακα ο οποίος περιέχει διάφορα ονόματα.
Oι μεταβλητές αυτές βρίσκονται στο private κομμάτι ώστε να διαθέτει πρόσβαση μόνο αυτή η κλάση , η οπόια κλάση έχει πρόσβαση κλαι στο protected μέρος της base class.

good_creature
Στο public αρχικά δηλώνεται ο constructor της good_creature ο οποίος δέχεται ως ορίσματα δύο ακέραιους έναν για την ζωή και έναν για το κατώφλι του πλάσματος.
Ειδικότερα εφόσον αποτελεί υποκλάση πρέπει να αρχικοποιηθεί και η κλάση creature με τον ακέραιο L ο οποίος αποτελεί την ζωή του πλάσματος, και να αρχικοποιηθούν οι μεταβλητές __L και g_thrsh οι οποίες παίρνουν και αυτές την ζωή και το κατώφλι του πλάσματος και οι οποίες θα χρειαστούν στην συνέχεια γιαυτόν τον λόγο επομένως χρησιμοποιείται ο initializer list.
Μέσα στον constructor δημιουργείται ένας πίνακας με 10 τυχαία ονόματα , ενώ στην ακριβώς επόμενη εντολή μέσω της συνάρτησης assign που δίνεται απο την κλάση string η μεταβλητή good_creature_name θα πάρει ένα τυχαίο όνομα απο τον πίνακα των ονομάτων, η διαδικασία αυτή θα γίνει μέσω της rand η οποία θα δώσει έναν τυχαίο αριθμό απο το 0 εώς το 9 και θα επιλεχθεί το στοιχείο του πίνακα που αντιστοιχεί στον αριθμό αυτό και θα δωθεί το όνομα στην μεταβλητή good_creature_name.
Στην συνέχεια θα γίνει η κατάλληλη εκτύπωση.

good_creature(good_creature &a)
Ο σκοπός του copy constructor είναι να κάνει αντιγραφή την ζωή και το όνομα ενός πλάσματος σε ένα άλλο .
Ουσιαστικά όπως θα δειχθεί και στην συνέχεια ο copy constructor θα χρησιμοποιηθεί για την δημιουργία νέων πλασμάτων και συγκεκριμένα καλών πλασμάτων και θα δωθούν στο νέο πλάσμα τα χαρακτηριστικά του προηγόυμενου στον πίνακα πλασμάτων καλού πλάσματος. 
Ο copy constructor δέχεται σαν όρισμα ένα reference σε αντικείμενο τύπου good_creature, ομοίως όπως στον constructor θα πρέπει να αρχικοποιηθεί η κλάση creature . Μέσω του initializer list θα αρχικοποιηθεί η ζωή (__L)και το κατώφλι(g_thrsh) ενός πλάσματος , συγκεκριμένα το g_thrsh θα πάρει την τιμή του good_thrsh του αντικειμένου που δείχνει το reference (το οποίο αποτελεί όρισμα του copy constructor) όπως επίσης και η κλάση creature θα πάρει ως όρισμα την ζωή του αντικειμένου που δείχνει το reference που είναι όρισμα του copy constructor .
Στην συνέχεια αυτό που γίνετε είναι ότι στην μεταβλητή creatures_life του αντικειμένου που δείχνει ο δείκτης this ,δηλαδή στο αντικείμενο του οποίου ο copy constructor θα εκτελείται εκείνη την στιγμή , θα δωθεί η τιμή του creatures_life του αντικειμένου που θα δείχνει το reference όρισμα του copy constructor.
Ακριβώς απο κάτω  στην μεταβλητή creatures_name του αντικειμένου που δείχνει ο δείκτης this θα δωθεί η συμβολοσειρά του creatures_name του αντικειμένου που θα δείχνει το reference όρισμα του copy constructor(όπου όπως και παραπάνω το this θα δείχνει στο αντικείμενο του οποίου εκείνη την στιγμή θα εκτελείται ο copy constructor και όπως θα δειχθεί στην συνέχεια του αντικειμένου που θα δημιουργείται ουσιαστικά εκείνη την στιγμή).

good_creature clone
Η clone της good_creature δέχεται ως ορίσματα δύο ακέραιους αριθμούς και έναν pointer σε αντικείμενο τύπου creature_society* .
Στο ακέραιο όρισμα b δίνεται το μέγεθος N του πίνακα των creatures που δημιουργείται στην creature_society, το ακέραιο όρισμα n θα δέχεται ουσιαστικά έναν αριθμό που θα αποτελεί την θέση του creature που θα γίνει εκείνη την στιγμή η  επεξεργασία του , ενώ τέλος ο δείκτης όρισμα αυτός ουσιαστικά θα δέχεται την διεύθυνση του αντικειμένου creature_society του οποίου κάποια members θα επεξεργαστούν.
Επομένως αρχικά ελέγχεται αν ο αριθμός n (η θέση του στοιχείου στον πίνακα) είναι ίσος με τον αριθμό b-1 (το μέγεθος του πίνακα μειον 1 ) ουσιαστικά ο έλεγχος αυτός γίνεται για να ελεγχθεί αν επεξεργάζεται το τελευταίο στοιχείο του πίνακα των πλασμάτων της κοινωνίας πλασμάτων.
Η εκφώνηση λέει πως σε περίπτωση που το καλό πλάσμα που πρόκειται να κλωνοποιηθεί είναι το τελευταίο τότε θα κλωνοποιηθεί στο πρώτο στοιχείο του πίνακα , άρα γίνεται ο έλεγχος αν η θέση που επεξεργάζεται εκείνη την στιγμή εἰναι η τελευταία δηλαδή το n==b-1 τότε αρχικά θα ελέγξει αν το πρώτο στοιχείο του πίνακα είναι τύπου good_creature, προκειμένου αν όντως είναι το τελευταίο στοιχείο τότε να μειώσει κατά ένα τον μετρητή των καλών πλασμάτων της κλάσης creatures_society και στην συνέχεια να διαγράψει το πρώτο στοιχείο του πίνακα πλασμάτων της creature_society εφόσον στην θέση του θα δημιουργηθεί ένα καινούργιο με τα χαρακτηριστικά του τελευταίου.
Σε περίπτωση που  το n παίρνει τον αριθμό που προκύπτει απο το μέγεθος του πίνακα πλυν ένα (η τελευταία θέση του πίνακα των πλασμάτων θα είναι αυτή διότι η τοποθέτηση στοιχείων μέσα στον πίνακα γίνετε ξεκινώντας απο την θέση μηδέν) τότε θα διαγραφεί η πρώτη θέση του πίνακα των πλασμάτων και θα δημιουργηθεί ένα αντικείμενο τύπου good_creature στο οποίο θα δείχνει ένας pointer good_creature . Το νέο αντικείμενο good_creature θα δημιουργηθεί μέσω του copy constructor στο οποίο σαν όρισμα θα δωθεί ο δείκτης this. Πιο αναλυτικά ο δείκτης this θα περιέχει την διεύθυνση του πλάσματος το οποίο θα κλωνοποιηθεί στις επόμενες θέσεις του πίνακα πλασμάτων. Αυτο το γνωρίζουμε διότι μετά το φτιάξιμο του πίνακα πλασμάτων στην creature society στην συνέχεια γίνονται διάφορες ενέργειες στα πλάσματα , έστω δηλαδή ότι καλείται η bless για παράδειγμα ενός καλού πλάσματος τότε εφόσον πληρούνται οι προυποθέσεις θα κληθεί η clone_next της creature_sociey η οποία με τη σειρά της θα καλέσει την clone του συγκεκριμένου πλάσματος , επομένως ο δείκτης this θα δείχνει στο συγκεκριμένο καλό πλάσμα και όταν δημιουργηθεί έναν νέο πλάσμα προκειμένου να αντικαταστήσει το επόμενο πλάσμα του πλάσματος που κλήθηκε η συνάρτηση clone του (και στο οποίο δείχνει ο δείκτης this) θα πάρει ως όρισμα τον δείκτη this έτσι ώστε ουσιαστικά το επόμενο πλάσμα να αντιγράψει τα περιεχόμενα του προηγούμενου πλάσματος.
Στην συνέχεια αφού αυξήθηκαν τα καλά πλάσματα αυξάνεται και ο μετρητής τους και στην επόμενη θέση του πίνακα όπου στην περίπτωση μας είναι το πρώτο στοιχείο του πίνακα θα δείχνει στο καινούργιο πλάσμα που δημιουργήθηκε το οποίο είναι το κλωνοποιημένο του προηγούμενου πλάσματος.
Η διαδικασία αυτή αποτελεί ειδική περίπτωση , στην γενική περίπτωση ακριβώς απο κάτω γίνεται η ίδια ακριβως απλώς κλωνοποιείται το επόμενο πλάσμα απο το προηγούμενο (θα δημιουργηθεί καινούργιο πλάσμα με τα χαρακτηριστικά του προηγούμενου και θα βρεί την θέση του στον πίνακα πλασμάτων). Επίσης θα κληθεί η συνάρτηση link_with_society για να βρεί την θέση του στον πίνκα το πλάσμα. 
Για να δημιουργηθεί ένα καινούργιο αντικείμενο δημιουργείται π΄ρωτα ένας δείκτης ο οπόιος θα δείχνει στο αντικείμενο αυτό ώστε σε πρίπτωση που θέλουμε να έχουμε πρόσαβση στο private κομμάτι της κλάσης του αντικειμένου για κάποπιο έλεγχο είναι γνωστό ότι μπορεί να φτιαχτεί το αντικείμενο και η θέση του πίνκα να δείχνει κατευθείαν σαυτό ωστόσο τότε δεν θα είχαμε πρόσβαση στο private κομμάτι του αντικειμένου διότι η υπερκλάση δεν έχει πρόσβαση άρα ούτε και ένας δείκτης τέτοιου τύπου η ίδια διαδικασία ακολουθείται σε κάθε δημιουργία αντικειμένου τύπου good_creature ή bad_creature.

good creature is_a_good
H συνάρτηση αυτή εφόσον βρισκόμαστε στην κλάση good_creature θα επιστρέψει true.

good_creature gets_blessed 
H gets_blessed δέχεται σαν ορίσματα την διεύθυνση ενός αντικειμένου της κλάσης creatures_society και έναν ακέραιο αριθμό.
Στην περίπτωση που το πλάσμα του οποίου η gets_blessed συνάρτηση καλείται δεν είναι zombie τότε αυξάνεται η ζωή του κατά μία μονάδα και εκτυπώνονται τα απαραίτητα μηνύματα.
Επίσης στην περίπτωση που η ζωή του συγκεκριμένου πλάσματος είναι μεγαλύτερη  απο το κατώφλι των πλασμάτων τότε θα κληθεί η clone_next του αντικειμένου creature society του οποίου την διεύθυνση δώσαμε ως όρισμα μαζί με τον αριθμό που υποδηλώνει την θέση του πλάσματος στον πίνακα.

~good_creature
Ο destructor της κλάσης όταν κληθεί θα εκτυπώσει και ένα μήνυμα.

class bad_creature
Όπως ορίστηκε η υποκλάση good_creature έτσι θα οριστεί και η υποκλάση bad_creature.
Στο private κομμάτι της διαθέτει τις αντίστοιχες μεταβλητές bad_thrsh και b_thrsh η οποίες δέχονται την τιμή για το κατώφλι των κακών πλασμάτων, μια μεταβλητή ___L για την ζωή του πλάσματος και μία μεταβλητή bad_creatures_name για το όνομα του πλάσματος.

Σχόλιο:Η υποκλάση αυτή είναι ίδια με την υποκλάση good_creature με την διαφορά ότι η bad_creature διαθέτει δικό της πίνακα με ονόματα και διαφορετική μεταβλητή για την αποθήκευση του ονόματος όπως επίσης διαφέρουν ως προς τηις συναρτήσεις clone που έχουν η κάθε μία.

bad_creature clone
Η clone της bad_creature ομοίως με της good_creature δέχεται ως ορίσματα δύο ακέραιους αριθμούς και έναν pointer σε αντικείμενο τύπου creature_society* 
Στο ακέραιο όρισμα b δίνεται το μέγεθος N του πίνακα των creatures που δημιουργείται στην creature_society, το ακέραιο όρισμα n θα δέχεται ουσιαστικά έναν αριθμό που θα αποτελεί την θέση του creature που θα γίνει εκείνη την στιγμή η  επεξεργασία του , ενώ τέλος ο δείκτης όρισμα αυτός ουσιαστικά θα δέχεται την διεύθυνση του αντικειμένου creature_society του οποίου κάποια members θα επεξεργαστούν.
Στην συνέχεια γίνεται έλεγχος αν το επόμενο πλάσμα στο πίνακα απο αυτό που πρόκειται να κλωνοποιηθεί είναι καλό πλάσμα διότι εφόσον είναι τότε γίνεται έλεγχος αν ο μετρητής καλών πλασμάτων είναι μηδέν διότι αν είναι δεν έχει νόημα να μειωθεί άλλο και εφόσον είναι αφαιρείται μία μονάδα απο τον μετρητή καλών πλασμάτων διότι το πλάσμα αυτό που αποτελεί το επόμενο πλάσμα του πλάσματος που θα κλωνοποιηθεί πρόκειται να διαγραφεί(ο έλεγχος αυτός γίνεται για να έχει σωστή τιμή ο μετρητής καλών πλασμάτων διότι πρόκειται να γίνει διαγραφεί καλού πλάσματος).
Επομένως στην συνέχεια θα γίνει διαγραφεί του πλάσματος.
Θα δημιουργηθεί ένα νέο κακό πλάσμα με βάση τον copy constructor του bad_creature και θα καλεσθεί η συνάρτηση link_with_society στην περίπτωση του bad_creature δεν τίθεται θέμα πέρι πρώτης θέσης διότι αν ένα κακό πλάσμα βρίσκεται στην τελευταία θέση του πίνακα και θέλει να κλωνοποιηθεί δεν θα μπορέσει όπως γίνετε στην κλάση good_creature.

class creature_society
Aρχικά επέλεξα να υλοποιήσω την κοινότητα με βάση την δεύτερη προτεινόμενη υλοποίηση που δίνεται,δηλαδή δημιούργησα δυναμικά έναν πίνακα με δείκτες τύπου creature οι οποίοι δείχνουν σε πλάσματα τύπου good_creature ή bad_creature, όπου σε κάθε ένα απο τα πλάσματα καλείται η συνάρτηση link_with_society η οποία συνάρτηση δίνει στο πλάσμα την θέση του στον πίνακα.

Στο private κομμάτι περιέχονται μία μεταβλητή random_is_good_or_bad η οποία θα δέχεται ή τον αριθμό 1 ή τον αριθμό 0 και ανάλογα με το ποιόν αριθμό δεχθεί μέσω της rand τότε θα δημιουργηθεί είτε ένα καλό είτε ένα κακό πλάσμα,μια μεταβλητή Ν για το μέγεθος του πίνακα των πλασμάτων που θα δωθεί απο την γραμμή εντολών,μια μεταβλητή L για την ζωή των πλασμάτων που θα δωθεί απο την γραμμή εντολών , ομοίως στις μεταβλητές Nsize και life δίνονται η τιμή του μεγέθους του πίνακα των πλασμάτων και η τιμή της ζωής των πλασμάτων αντίστοιχα, τέλος οι μεταβλητές _good_thrsh και _bad_thrsh δέχονται το κατώφλι κάθε υποκλάσης .
Στο public κομμάτι υπάρχει ένας μετρητής good_creature_counter για να μετραει το πλήθος των καλών πλασμάτων και μια μεταβλητή zombie_counter η οποία είναι μετρητής ζόμπι και τέλος ένας πίνακας τύπου creature .

creature_society
Όταν δημιουργείται ένα αντικείμενο τύπου creature_society αρχικοποιούνται απο τα ορίσματα τις οι μεταβλητές που αντιστοιχούν στο μέγεθος του πίνακα,την ζωή των πλασμάτων και τα κατώφλια των πλασμάτων.
Αρχικά εκτυπώνεται το ανάλογο μήνυμα κατά την δημιουργία του αντικειμένου.
Στην συνέχεια δημιουργείται δυναμικά ο πίνακας των πλασμάτων, συγκεκριμένα με μέγεθος Ν. Ο πίνακας των πλασμάτων αυτός υλοποιείται και δηλώνεται  μαυτόν τον τρόπο διότι στο πρόγραμμα αυτό θέλουμε τα αντικείμενα του πίνακα να αρχικοποιηθούν με συγκεκριμένα ορίσματα επομένως κάθε αντικείμενο θα δημιουργηθεί δυναμικά και ο πίνακας θα είναι πίνακας δεικτών ο οποίος με τη σειρά του ορίζεται δυναμικά διότι το μέγεθος του δεν είναι σταθερό.
Στην αρχή αρχικοποιείται ο πίνκας με null σε κάθε θέση .
Η srand(time(NULL)) χρησιμοποιείται ως seed προκειμένου η παρακάτων rand να βγάζουν διαφορετικές τιμές κάθε φορά που τρέχει το πρόγραμμα.
Με μια for ακριβώς απο κάτω γεμίζει ο πίνακας με δείκτες τύπου creature πιου θα δείχνει σε αντικείμενα υποκλάσεων.
Η rand απο κάτω παίρνει δύο αριθμός το μηδέν ή το ένα κάθε φορά και το δίνει στην μεταβλητή random_is_a_good_or_bad  άν δώσει το 1 δημιουργείται ένα καλό πλάσμα άν δώσει το μηδέν θα δημιουργήσει ένα κακό πλάσμα.
Σε περίπτωση που η μεταβλητη  random_is_good_or_bad πάρει την τιμή 1 τότε θα οριστεί ένας δείκτης ο οποίος θα δείχνει σε ένα καινούργιο πλάσμα που θα δημιουργηθεί στο οποίο μέσω της επόμενη εντολής θα δείχνει μια θέση του πίνακα  και θα κληθεί η συνάρτηση link_with_society προκειμένου να βρεί την θέση του στον πίνακα, ενώ τέλος θα αυξηθεί ο μετρητής καλών πλασμάτων.
Η ίδια διαδικασία θα γίνει και στα κακά πλάσματα , χωρίς ωστόσο να διαθέτει μετρητή κακών πλασμάτων.

creature_society beat_society
H συνάρτηση αυτή θα καλέσει την συνάρτηση gets_beaten του πλάσματος και θα αφαιρέσει μία μονάδα απο την ζωή του τα ορίμστα που θα δώσει είναι ο αριθμός της θέσης του πλάσματος στον πίνακα και  μέσω του this η διεύθυνση του συγκεκριμένου αντικειμένου κλάσης creature society.

creature_society bless_society
Η συνάρτηση αυτή θα καλέσει την gets_blessed του πλάσματος η οποία gets_blessed είναι virtual στην κλάση creature , μπορεί να μην είναι γνωστό εκείνη την στιγμή απο τον προγρμματιστή ποιά συνάρτηση απο τις τρείς αυτές με το ίδιο όνομα θα κληθεί , γιαυτό και αξιοποιείται η κληρονομικότητα στην περίπτωση αυτή δηλαδή εφόσον είναι virtual η συνάρτηση αυτή τότε θα κληθεί η συνάρτηση gets_blessed της κλάσης του αντικειμένου που θα δείχνει ο δείκτης του πίνακα και όχι της κλάσης του τύπου του πίνακα .Επομένως ανάλογα με το τί τύπου είναι το αντικείμενο στο οποίο δείχνει ο δείκτης που βρίσκεται στην θέση αυτή του πίνακα είτε good_creature είτε bad_creature θα κληθεί η συνάρτηση του απο την c++ αυτόματα. 

Σχόλιο:οι συναρτήσεις no_of_goods και no_of_zombies θα είναι const εφόσον επιστρέφουν τιμή αποτελούν ουσιαστικά getters.

creature_society no_of_goods
Επιστρέφει τον αριθμό του μετρητή των καλών πλασμάτων.
 
creature_society no_of_zombies
Επιστρέφει τον αριθμό του μετρητή των ζόμπι.

creature_society do_something_with_a_random_creature
Η συνάρτηση αυτή η οποία καλείται απο την main καλεί τυχαία μία συνάρτηση της creature_society είτε την beat_society είτε την bless_society ανάλογα με το αν το α είναι 0 ή 1 , επίσης δίνεται σαν όρισμα το b το οποίο αποτελεί τον αριθμό της θέσης του πίνακα στο πλάσμα το οποίο δείχνει να γίνει η ενέργεια αυτή.

creature_society clone_next
Το όρισμα της συνάρτησης αποτελεί τον αριθμό της θέσης που θα κληθεί η συνάρτηση clone του πλάσματος της. Η clone συνάρτηση του πλάσματος όταν κληθεί θα πάρει ως ορίσματα τον δείκτη this που δείχνει στην συγκεκριμένη κοινωνία πλασμάτων , τον αριθμό με την θέση , της οποίας το πλάσμα θα κλωνοποιηθεί και το μέγεθος του πίνακα. Ομοίως όπως την blessed εφόσον είναι virtual ανάλογα με τον τύπο που δείχνει ο δείκτης creature σε εκείνη την θέση σε good_creature ή bad_creature τότε θα κληθεί και η συνάρτηση της συγκεικριμένης κλάσης(στο πρόγραμμα η clone next θα κληθεί μόνο απο good_creature αντικείμενο συγκεκριμένα στην συνάρτηση του gets_blessed).

creature_society clone_zombies
Για την clone zombies της κλάσης creature_society υπάρχει μια for η οποία κάνει τόσες επαναλαήψεις όσες το μέγεθος του πίνακα και ελέγχει για κάθε θέση αν είναι zombie μέσω της συνάρτησης is_a_zombie του πλάσματος συγκεκριμένα το i θα πάρει την τιμή n+1 δηλαδή του επόμενου πλάσματος απο αυτό που πρόκειται να κλωνοποιηθεί και ελέγχεται αν είναι ζόμπι, σε περίπτωση που είναι ζόμπι αφαιρείται μία μονάδα απο τον μετρητή των zombie διότι πρόκειται στην θέση του να κλωνοποιηθεί ένα κακό πλάσμα και αυξάνεται το n προκειμένου να ελεγχθει το επόμενο πλάσμα αλλα και το i για να γίνει η ίδια διαδικασία τελικά στο επόμενο του επόμενου πλάσματος . Η συνάρτηση η συγκεκριμένη καλείται μόνο απο bad_creatures συγκεκριμένα απο την gets_blessed τους συνάρτηση. Σε περίπτωση που δεν είναι ζόμπι το πλάσμα του πίνακα που εξετάζεται τότε εκτελείται η continue για να ελεγχθεί η επόμενη θέση. Κάθε φορά που θα βρίσκει ζόμπι θα κλωνοποιεί ένα κακό πλάσμα που του έχει ζητηθεί.

creature society society_of_goods_or_zombies
Σε περίπτωση που ο μετρητής των καλών πλασμάτων είναι ίσος με το μέγεθος του πίνακα τότε εκτυπώνεται το κατάλληλο μήνυμα .
Σε περίπτωση που ο μετρητής των ζόμπι είναι ίσος εκτυπώνεται ανάλογα μύνημα και σε άλλη περίπτωση διαφορετικό.

creature_society ~creature_society
Στον destructor της creature_society υπάρχει ένας βρόγχος ο οποίος διαγράφει κάθε ένα απο τα στοιχεία του πίνακα και τέλος τον πίνακα. 

main
Όσον αφορά το αρχείο που διαθέτει την main ουσιαστικά αυτό που γίνεται είναι να δίνουμε εμέις χειροκίνητα μερικές τιμές για τις απαιτούμενες μεταβλητές στην συνέχεια θα δημιουργηθεί μια κοινωνία απο Ν πλάσματα ,ύστερα μέσω μιας for στην οποία ορίζονται δύο μεταβλητές n η οποία μέσω της ram θα παίρνει δύο τιμές είτε το μηδέν είτε το 1 τυχαία και θα γίνεται μια απο τις δύο ενέργειες bless ή beat και η μεταβλητή p μέσω της rand θα πάρει έναν αριθμό απο το μηδέν εώς το N-1 που θα έχουμε δώσει και θα δηλώνει έτσι την θέση του πίνακα στην οποία θα γίνει η ενέργεια.
Τέλος ανάλογα με τις τιμές των μετρητών θα εκτυπωθούν τα κατάλληλα μηνύματα΄

Συνοπτικά για την διαδικασία έστω ότι η ενέργεια που πρόκειται να γίνει είναι να χτυπηθεί το πλάσμα στην θέση 2 , εφόσον θα χτυπηθεί το πλάσμα θα καλεσθεί πρώτα η συνάρτηση beat της creature society η οποία με την σειρά της θα καλέσει την συνάρτηση beat της creature.
Αν η ενέργεια που προκύπτει είναι η ευλογία ενός καλού πλάσματος τότε αρχικά απο την bless της society θα κληθεί η συνάρτηση bless του καλού πλάσματος μέσω της κληρονομικότητας μετά σε περίπτωση που είναι εύρωστο θα κληθεί η συνάρτηση clone next  της creature society  και απο εκεί θα κληθεί η συνάρτηση clone της creature.
Αν η ενέργεια που προκύπτει είναι ευλογία σε κακό πλάσμα τότε θα κληθεί η bless society στην συνέχεια θα κληθεί η gets blessed του κακού πλάσματος μέσω της κληρονομικότητας , ύστερα θα κληθεί η clone zombies της creature society και τέλος εφόσον είναι εφικτό θα κληθεί η clone του κακού πλάσματος. 

